--- openssl-0.9.7f/crypto/rand/rand_unix.c.use-poll	2005-01-14 17:19:47.000000000 +0100
+++ openssl-0.9.7f/crypto/rand/rand_unix.c	2005-04-27 12:16:32.861211590 +0200
@@ -124,6 +124,7 @@
 #include <fcntl.h>
 #include <unistd.h>
 #include <time.h>
+#include <sys/poll.h>
 
 #ifdef __OpenBSD__
 int RAND_poll(void)
@@ -155,6 +156,7 @@
 	static const char *randomfiles[] = { DEVRANDOM };
 	struct stat randomstats[sizeof(randomfiles)/sizeof(randomfiles[0])];
 	int fd,i;
+	struct pollfd pfd;
 #endif
 #ifdef DEVRANDOM_EGD
 	static const char *egdsockets[] = { DEVRANDOM_EGD, NULL };
@@ -182,10 +184,9 @@
 #endif
 			)) >= 0)
 			{
-			struct timeval t = { 0, 10*1000 }; /* Spend 10ms on
+			int t = 10; 			/* Spend 10ms on
 							      each file. */
 			int r,j;
-			fd_set fset;
 			struct stat *st=&randomstats[i];
 
 			/* Avoid using same input... Used to be O_NOFOLLOW
@@ -201,30 +202,25 @@
 
 			do
 				{
-				FD_ZERO(&fset);
-				FD_SET(fd, &fset);
-				r = -1;
-
-				if (select(fd+1,&fset,NULL,NULL,&t) < 0)
-					t.tv_usec=0;
-				else if (FD_ISSET(fd, &fset))
+				pfd.fd = fd;
+				pfd.events = POLLIN;
+				pfd.revents = 0;
+				
+				if ((r=poll(&pfd,1,t)) == 0)
+					t = 0;
+				else if (r > 0 && (pfd.revents & POLLIN))
 					{
 					r=read(fd,(unsigned char *)tmpbuf+n,
 					       ENTROPY_NEEDED-n);
 					if (r > 0)
 						n += r;
 					}
-
-				/* Some Unixen will update t, some
-				   won't.  For those who won't, give
-				   up here, otherwise, we will do
-				   this once again for the remaining
-				   time. */
-				if (t.tv_usec == 10*1000)
-					t.tv_usec=0;
+				/* we don't know how big part of the timeout elapsed
+				    wait half the original timeout next time */
+				t >>= 1; 
 				}
 			while ((r > 0 || (errno == EINTR || errno == EAGAIN))
-				&& t.tv_usec != 0 && n < ENTROPY_NEEDED);
+				&& t != 0 && n < ENTROPY_NEEDED);
 
 			close(fd);
 			}
