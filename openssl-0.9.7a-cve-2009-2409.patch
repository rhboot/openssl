Skip signature validation on selfsigned certificates and
drop MD2 algorithm from the list of algorithms added to
EVP tables by default. (CVE-2009-2409)
diff -up openssl-0.9.7a/crypto/evp/c_alld.c.nomd2 openssl-0.9.7a/crypto/evp/c_alld.c
--- openssl-0.9.7a/crypto/evp/c_alld.c.nomd2	2001-02-19 17:03:53.000000000 +0100
+++ openssl-0.9.7a/crypto/evp/c_alld.c	2010-02-10 12:55:31.000000000 +0100
@@ -64,9 +64,6 @@
 
 void OpenSSL_add_all_digests(void)
 	{
-#ifndef OPENSSL_NO_MD2
-	EVP_add_digest(EVP_md2());
-#endif
 #ifndef OPENSSL_NO_MD4
 	EVP_add_digest(EVP_md4());
 #endif
diff -up openssl-0.9.7a/crypto/x509/x509_vfy.c.nomd2 openssl-0.9.7a/crypto/x509/x509_vfy.c
--- openssl-0.9.7a/crypto/x509/x509_vfy.c.nomd2	2010-02-10 12:53:02.000000000 +0100
+++ openssl-0.9.7a/crypto/x509/x509_vfy.c	2010-02-10 12:53:16.000000000 +0100
@@ -665,7 +665,11 @@ static int internal_verify(X509_STORE_CT
 	while (n >= 0)
 		{
 		ctx->error_depth=n;
-		if (!xs->valid)
+
+		/* Skip signature check for self signed certificates. It
+		 * doesn't add any security and just wastes time.
+		 */
+		if (!xs->valid && xs != xi)
 			{
 			if ((pkey=X509_get_pubkey(xi)) == NULL)
 				{
@@ -675,13 +679,6 @@ static int internal_verify(X509_STORE_CT
 				if (!ok) goto end;
 				}
 			else if (X509_verify(xs,pkey) <= 0)
-				/* XXX  For the final trusted self-signed cert,
-				 * this is a waste of time.  That check should
-				 * optional so that e.g. 'openssl x509' can be
-				 * used to detect invalid self-signatures, but
-				 * we don't verify again and again in SSL
-				 * handshakes and the like once the cert has
-				 * been declared trusted. */
 				{
 				ctx->error=X509_V_ERR_CERT_SIGNATURE_FAILURE;
 				ctx->current_cert=xs;
diff -up openssl-0.9.7a/ssl/ssl_algs.c.nomd2 openssl-0.9.7a/ssl/ssl_algs.c
--- openssl-0.9.7a/ssl/ssl_algs.c.nomd2	2001-02-20 09:11:58.000000000 +0100
+++ openssl-0.9.7a/ssl/ssl_algs.c	2010-02-10 12:57:10.000000000 +0100
@@ -82,9 +82,6 @@ int SSL_library_init(void)
 	EVP_add_cipher(EVP_aes_192_cbc());
 	EVP_add_cipher(EVP_aes_256_cbc());
 #endif
-#ifndef OPENSSL_NO_MD2
-	EVP_add_digest(EVP_md2());
-#endif
 #ifndef OPENSSL_NO_MD5
 	EVP_add_digest(EVP_md5());
 	EVP_add_digest_alias(SN_md5,"ssl2-md5");
