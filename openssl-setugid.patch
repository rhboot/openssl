Security fix #1: don't use environment variables in libcrypto when running
setXid.  Also take advantage of glibc's built-in __libc_enable_secure variable
in OPENSSL_issetugid.

--- openssl-0.9.6/crypto/rand/randfile.c.setugid	Sun Sep 17 16:26:48 2000
+++ openssl-0.9.6/crypto/rand/randfile.c	Fri Apr 20 12:07:31 2001
@@ -81,8 +81,14 @@
 #define BUFSIZE	1024
 #define RAND_DATA 1024
 
+/* Include a static version of the OPENSSL_issetugid() function. */
+#include "../uid.c"
+
 /* #define RFILE ".rnd" - defined in ../../e_os.h */
 
+/* Note that these functions are intended for seed files only.
+ * Entropy devices and EGD sockets are handled in rand_unix.c */
+
 int RAND_load_file(const char *file, long bytes)
 	{
 	/* If bytes >= 0, read up to 'bytes' bytes.
@@ -117,7 +123,7 @@
 		if (bytes > 0)
 			{
 			bytes-=n;
-			if (bytes == 0) break;
+			if (bytes <= 0) break;
 			}
 		}
 	fclose(in);
@@ -193,10 +199,11 @@
 
 const char *RAND_file_name(char *buf, int size)
 	{
-	char *s;
+	char *s=NULL;
 	char *ret=NULL;
 
-	s=getenv("RANDFILE");
+	if (OPENSSL_issetugid() == 0)
+		s=getenv("RANDFILE");
 	if (s != NULL)
 		{
 		strncpy(buf,s,size-1);
@@ -205,16 +212,19 @@
 		}
 	else
 		{
-		s=getenv("HOME");
-		if (s == NULL) return(RFILE);
-		if (((int)(strlen(s)+strlen(RFILE)+2)) > size)
-			return(RFILE);
-		strcpy(buf,s);
+		if (OPENSSL_issetugid() == 0)
+			s=getenv("HOME");
+		if (s != NULL && (strlen(s)+strlen(RFILE)+2 < size))
+			{
+			strcpy(buf,s);
 #ifndef VMS
-		strcat(buf,"/");
+			strcat(buf,"/");
 #endif
-		strcat(buf,RFILE);
-		ret=buf;
+			strcat(buf,RFILE);
+			ret=buf;
+			}
+		  else
+		  	buf[0] = '\0'; /* no file name */
 		}
 	return(ret);
 	}
--- openssl-0.9.6/crypto/uid.c.setugid	Fri Apr 20 12:01:54 2001
+++ openssl-0.9.6/crypto/uid.c	Fri Apr 20 12:12:07 2001
@@ -0,0 +1,95 @@
+/* The version of OPENSSL_issetugid() in this file is declared static,
+   and so must be explicitly included in other modules which reference it.
+   This keeps the symbol from being exported.  We also return the value of
+   __libc_enable_secure if the uids and gids match, in case the application
+   wants us to enforce a policy it has set. */
+
+/* crypto/uid.c */
+/* ====================================================================
+ * Copyright (c) 2001 The OpenSSL Project.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer. 
+ *
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ *
+ * 3. All advertising materials mentioning features or use of this
+ *    software must display the following acknowledgment:
+ *    "This product includes software developed by the OpenSSL Project
+ *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
+ *
+ * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
+ *    endorse or promote products derived from this software without
+ *    prior written permission. For written permission, please contact
+ *    licensing@OpenSSL.org.
+ *
+ * 5. Products derived from this software may not be called "OpenSSL"
+ *    nor may "OpenSSL" appear in their names without prior written
+ *    permission of the OpenSSL Project.
+ *
+ * 6. Redistributions of any form whatsoever must retain the following
+ *    acknowledgment:
+ *    "This product includes software developed by the OpenSSL Project
+ *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
+ * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+ * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
+ * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
+ * OF THE POSSIBILITY OF SUCH DAMAGE.
+ * ====================================================================
+ *
+ * This product includes cryptographic software written by Eric Young
+ * (eay@cryptsoft.com).  This product includes software written by Tim
+ * Hudson (tjh@cryptsoft.com).
+ *
+ */
+
+#include <openssl/crypto.h>
+
+#if defined(__OpenBSD__) || (defined(__FreeBSD__) && __FreeBSD__ > 2)
+
+#include <unistd.h>
+
+static int OPENSSL_issetugid(void)
+	{
+	return issetugid();
+	}
+
+#elif defined(WIN32)
+
+static int OPENSSL_issetugid(void)
+	{
+	return 0;
+	}
+
+#else
+
+#define _GNU_SOURCE
+#include <unistd.h>
+#include <sys/types.h>
+extern int __libc_enable_secure;
+
+static int OPENSSL_issetugid(void)
+	{
+	if (getuid() != geteuid()) return 1;
+	if (getgid() != getegid()) return 1;
+	return __libc_enable_secure;
+	}
+#endif
+
+
